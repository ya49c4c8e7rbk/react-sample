openapi: 3.0.2
info:
  title: Swagger React.js sample API
  description: React.jsサンプル用API
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://localhost:3000/
tags:
- name: health-check
  description: ヘルスチェック
- name: users
  description: ユーザ
paths:
  /health-check:
    get:
      tags:
      - health-check
      summary: Health Check API
      operationId: health-check
      responses:
        200:
          description: successful
          content:
            application/json:
              schema:
                type: string
                example: OK
  /users/login:
    post:
      tags:
      - users
      summary: ログインAPI
      operationId: users_login
      requestBody:
        description: ログインユーザ情報
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test-user@example.com
                password:
                  type: string
                  example: password
        required: true
      security: []
      responses:
        201:
          description: successful
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: auth-cookie=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema: 
                type: object
                example:
                  statusCode: 201
                  message: success
        401:
          description: Unauthorized
          content:
            application/json:
              schema: 
                type: object
                example:
                  statusCode: 401
                  message: Unauthorized
        500:
          description: Internal Server Error
          content:
            application/json:
              schema: 
                type: object
                example:
                  statusCode: 500
                  message: Internal Server Error
  /users/logout:
    post:
      tags:
      - users
      summary: ログアウトAPI
      operationId: users_logout
      security:
      - cookieAuth: []
      responses:
        201:
          description: successful
          content:
            application/json:
              schema: 
                type: object
                example:
                  msg: success
        401:
          description: Unauthorized
          content: {}
  /users/registration:
    post:
      tags:
      - users
      summary: ユーザ情報登録API
      operationId: users_registration
      requestBody:
        description: ユーザ情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: テストユーザ
                email:
                  type: string
                  example: test-user@example.com
                password:
                  type: string
                  example: password
                confirmPassword:
                  type: string
                  example: password
        required: true
      security: []
      responses:
        201:
          description: successful
          content:
            application/json:
              schema: 
                type: object
                example:
                  msg: success
  /users/profile:
    get:
      security:
      - cookieAuth: []
      tags:
      - users
      summary: ユーザ情報取得API
      operationId: users_profile
      responses:
        200:
          description: successful
          content: 
            application/json:
              schema: 
                type: object
                example:
                  id: 1
                  name: テストユーザ
                  userId: test-user
        401:
          description: Unauthorized
          content: {}
  /users/refresh-tokens:
    get:
      security:
      - cookieAuth: []
      tags:
      - users
      summary: トークンリフレッシュAPI
      operationId: users_refresh-tokens
      responses:
        200:
          description: successful
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: auth-cookie=abcde12345; Path=/; HttpOnly
          content: 
            application/json:
              schema: 
                type: object
                example:
                  msg: success
        401:
          description: Unauthorized
          content: {}
components:
  schemas:
    users:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        userId:
          type: string
        email:
          type: string
        password:
          type: string
        refreshToken:
          type: string
        refreshTokenExp:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      xml:
        name: users
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth-cookie
